version: '3.4'

services:
  indexer:
    build:
      context: netkan/.
      target: dev
    environment:
      SSH_KEY: ${CKAN_NETKAN_SSHKEY}
      METADATA_PATH: ${CKAN_METADATA_PATH}
      METADATA_USER: ${CKAN_METADATA_USER}
      METADATA_REPO: ${CKAN_METADATA_REPO}
      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
      GH_Token: ${CKAN_GH_Token}
      SQS_QUEUE: OutboundDev.fifo
      SQS_TIMEOUT: 30
    volumes:
      - ./netkan:/home/netkan/netkan
    command: indexer
  scheduler:
    build:
      context: netkan/.
      target: dev
    environment:
      NETKAN_PATH: ${NETKAN_METADATA_PATH}
      AWS_DEFAULT_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
      SQS_QUEUE: InboundDev.fifo
      MAX_QUEUED: 1
    volumes:
      - ./netkan:/home/netkan/netkan
    command: scheduler
  inflator:
    image: kspckan/inflator
    environment:
      QUEUES: InboundDev.fifo,OutboundDev.fifo
      GH_Token: ${CKAN_GH_Token}
      AWS_REGION: ${CKAN_AWS_DEFAULT_REGION}
      AWS_SECRET_ACCESS_KEY: ${CKAN_AWS_SECRET_ACCESS_KEY}
      AWS_ACCESS_KEY_ID: ${CKAN_AWS_ACCESS_KEY_ID}
    volumes:
      # Docker will create this with root perms if
      # it's not created first. First user on most
      # distros is 1000:1000, which will match the
      # user in the container.
      - ${HOME}/ckan_cache:/home/netkan/ckan_cache
  webhooks:
    build:
      context: webhooks/.
    environment:
      GH_token: ${CKAN_GH_Token}
      XKAN_GHSECRET: test
      CKAN_meta: ${CKAN_METADATA_PATH}
      NetKAN: ${NETKAN_METADATA_PATH}
      IA_access: test
      IA_secret: test
      IA_collection: test
    volumes:
      - ${HOME}/ckan_cache:/home/netkan/ckan_cache
